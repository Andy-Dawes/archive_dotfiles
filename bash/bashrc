if [ -f /etc/bash_completion ]; then
	    . /etc/bash_completion
fi

xhost +local:root > /dev/null 2>&1

complete -cf sudo

shopt -s cdspell
shopt -s checkwinsize
shopt -s cmdhist
shopt -s dotglob
shopt -s expand_aliases
shopt -s extglob
shopt -s histappend
shopt -s hostcomplete
shopt -s nocaseglob

export HISTSIZE=10000
export HISTFILESIZE=${HISTSIZE}
export HISTCONTROL=ignoreboth

#alias ls='ls --group-directories-first --time-style=+"%d.%m.%Y %H:%M" --color=auto -F'
#alias ll='ls -l --group-directories-first --time-style=+"%d.%m.%Y %H:%M" --color=auto -F'
#alias la='ls -la --group-directories-first --time-style=+"%d.%m.%Y %H:%M" --color=auto -F'
alias grep='grep --color=tty -d skip'
alias cp="cp -i"                          # confirm before overwriting something
alias df='df -h'                          # human-readable sizes
alias free='free -m'                      # show sizes in MB
alias np='nano PKGBUILD'

# ex - archive extractor
# usage: ex <file>
ex ()
{
  if [ -f $1 ] ; then
    case $1 in
      *.tar.bz2)   tar xjf $1   ;;
      *.tar.gz)    tar xzf $1   ;;
      *.bz2)       bunzip2 $1   ;;
      *.rar)       unrar x $1     ;;
      *.gz)        gunzip $1    ;;
      *.tar)       tar xf $1    ;;
      *.tbz2)      tar xjf $1   ;;
      *.tgz)       tar xzf $1   ;;
      *.zip)       unzip $1     ;;
      *.Z)         uncompress $1;;
      *.7z)        7z x $1      ;;
      *)           echo "'$1' cannot be extracted via ex()" ;;
    esac
  else
    echo "'$1' is not a valid file"
  fi
}

# prompt
#PS1='[\u@\h \W]\$'

#==============================
## MY BASHRC FILE
#==============================

# Contents:
# ----------

# 1) Alias
# --------

# a) Common apt-get commands
alias ac="sudo apt-get autoclean"
#alias acc=""
alias ar="sudo apt-get autoremove"
alias in="sudo apt-get install"
#alias yin="yaourt"
alias out="sudo apt-get purge"
alias up="sudo apt-get update"
alias ug="sudo apt-get update && sudo apt-get upgrade"
alias eye="sudo aptitude search"
alias zzz="sudo shutdown -h now"

# b) chmod commands
alias mx='chmod a+x'
alias 000='chmod 000'
alias 644='chmod 644'
alias 755='chmod 755'

# c) tar commands
alias un="tar -zxvf"
alias unz="unzip"

# d) Open specific 'busy' docs
#alias emacs='emacs -nw'
alias vb='vim ~/.bashrc'
alias vi3='vim ~/.i3/config'
alias valp='vim ~/.pinerc'
alias vapt="vim ~/.calcurse/apts"
alias vdo="vim ~/.calcurse/todo"
alias vnb="vim ~/.newsbeuter/urls"
alias vtwit="vim ~/.turses/config"
alias vv="vim ~/.vimrc"
alias vchat="vim ~/.weechat/irc.conf"
alias pom30="~/Development/pomedoro/pom30break.sh"
alias pom60="~/Development/pomedoro/pom60break.sh"
alias pom10="~/Development/pomedoro/pom10sbreak.sh"
alias rad="~/Development/radio/radio.sh"
alias pudb='python -m pudb'
alias pudb3='python3 -m pudb3'

# d) Screenprint
alias pic="scrot -d 5"

# e) Terminal Welcome Screen

#fortune | cowsay -f tux

# f) Colours
BLACK='\e[0;30m'
BLUE='\e[0;34m'
GREEN='\e[0;32m'
CYAN='\e[0;36m'
RED='\e[0;31m'
PURPLE='\e[0;35m'
BROWN='\e[0;33m'
LIGHTGRAY='\e[0;37m'
DARKGRAY='\e[1;30m'
LIGHTBLUE='\e[1;34m'
LIGHTGREEN='\e[1;32m'
LIGHTCYAN='\e[1;36m'
LIGHTRED='\e[1;31m'
LIGHTPURPLE='\e[1;35m'
YELLOW='\e[1;33m'
WHITE='\e[1;37m'
NC='\e[0m'              # No Color

# g) Environmental Variables
declare -x HISTFILE=~/.bash_history
declare -x HISTCONTROL=ignoredups
declare -x HISTFILESIZE=100000
declare -x HISTSIZE=100000

# h) Prompt

#PS1='\n\[\e[1;30m\]┌───[foobar]───────────────────────────[\[\e[1;30m\]\w\[\e[1;30m\]             \n└─\[\e[1;30m\]▶▶▶\[\e[0;37m\]'

# i) Moving up Directory tree
alias ..="cd .."
alias ...="cd ../.."
alias ....="cd ../../.."
alias .....="cd ../../../.."

# j) Commonly used variations of ls (and typos)
alias ll="ls -l"
alias lo="ls -o"
alias lh="ls -lh"
alias la="ls -la"
alias sl="ls"
alias l="ls"
alias s="ls"

# k) This will keep you sane when you're about to smash the keyboard again.
alias frak="fortune"

# l) # This is where you put your hand rolled scripts (remember to chmod them)
PATH="$HOME/me/Dropbox/working/bin:$PATH"

# m) Search for a package - apt-cache and aptitude search in different ways so have both
alias searchc="apt-cache search"
alias search="aptitude search"
alias show="aptitude show"

# n) Append History:

#Causes bash to append to history instead of overwriting it. Typically when you launch bash, it loads history into memory, and when you close it it writes it out. This means that if you load two shells, use both, then close both, the one you closed last overwrites all changes.This snippet causes it to first of all only append changes (instead of overwriting with the whole buffer), and then to cause it to, after every command, write out changes. In effect, you get a live updating .bash_history, so if you start a new terminal, you have all the commands from your other running sessions' history.

shopt -s histappend
PROMPT_COMMAND='history -a'

# o) Search History

# Add "set -o vi" at the bottom of ~/.bashrc or /etc/bashrc, then press ESC in prompt to enter vi mode and search your issued command in history by giving a "/" at front. For example, in shell command line, press ESC, type /ls, enter.

set -o vi

# p) Automatically do a ls after using cd.

cd() {
  if [ -n "$1" ]; then
    builtin cd "$@" && ll
  else
    builtin cd ~ && ll
  fi
}

# q) Bakap file before changing: Useful if your about to change a config file and want to make a quick copy before hand.

bu () { cp $1 ~/.backup/`basename $1`-`date +%Y%m%d%H%M`.backup ; }

# r) Iftop - iftop command listens to network traffic on a named network interface and displays a table of current bandwidth usage by pairs of hosts.
alias ift="sudo iftop -f icmp -i wlan0"

# s) If this is an xterm set the title to user@host:dir

case "$TERM" in
xterm*|rxvt*)
    PROMPT_COMMAND='echo -ne "\033]0;${USER}@${HOSTNAME}: ${PWD}\007"'

    # Show the currently running command in the terminal title:
    # http://www.davidpashley.com/articles/xterm-titles-with-bash.html
    show_command_in_title_bar()
    {
        case "$BASH_COMMAND" in
            *\033]0*)
                # The command is trying to set the title bar as well;
                # this is most likely the execution of $PROMPT_COMMAND.
                # In any case nested escapes confuse the terminal, so don't
                # output them.
                ;;
            *)
                echo -ne "\033]0;${BASH_COMMAND}\007"
                ;;
        esac
    }
    trap show_command_in_title_bar DEBUG
    ;;
*)
    ;;
esac

# t) Tmux 256 Color
# for tmux: export 256color
[ -z "$TMUX" ] && export TERM=xterm-256color

# u) Ruby Version Manager
[[ -s "$HOME/.rvm/scripts/rvm" ]] && . "$HOME/.rvm/scripts/rvm"  # This loads RVM ]]

PATH=$PATH:$HOME/.rvm/bin # Add RVM to PATH for scripting

# v) Tmux aliases
alias mux="./.tmux/muxa.sh"

# w) Turses aliases
#alias twitv="turses"
#alias twitt="turses -a tuxopedia"
#alias twitr="turses -a ruggerpedia"

# x) Browser choice
export BROWSER="firefox"

[[ -s "$HOME/.rvm/scripts/rvm" ]] && . "$HOME/.rvm/scripts/rvm"

# Set up shell to include git
. ~/.git-prompt.sh
export GIT_PS1_SHOWDIRTYSTATE=1
export PS1='\n     \W$(__git_ps1 "  %s")    '
